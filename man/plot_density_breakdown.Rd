% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_utils.R
\name{plot_density_breakdown}
\alias{plot_density_breakdown}
\title{Plot function to visualize a balance conditioned on a discrete variable}
\usage{
plot_density_breakdown(df, coord.name, tr = NULL, tax, name.balance = TRUE)
}
\arguments{
\item{df}{PhILR transformed data (see \code{\link{philr}}) in long format
(see \code{\link{convert_to_long}})}

\item{coord.name}{the name of a balance/internal node on the tree (given as a string)}

\item{tr}{(Optional) though needed if \code{name.balance=TRUE}}

\item{tax}{a matrix/data.frame of taxonomy, rownames should correspond to \code{tr$tip.labels}
columns should be taxonomic levels (named) with increasing taxonomic resolution from left to right
(e.g., Phylum to the left of Genus).}

\item{name.balance}{logical (default: \code{FALSE}) of whether title should include output from
call to \code{\link{name.balance}}}
}
\value{
plot created with ggplot2
}
\description{
'Breaksdown' the distance between groups along a given balance.
}
\details{
It is helpful to convert \code{df} to long format with the \code{\link{convert_to_long}} function
as this function requires a specific format for the data. Specifically it requires a data frame with four
columns \code{c('sample','labels', 'coord', 'value')}, where labels is the categorical variable to
group the data based on and value is the value of a given sample along \code{coord}.
}
\examples{
library(phyloseq)
data(CSS)
df <- t(otu_table(CSS))
df <- df + 0.65   # add a small pseudocount
tree <- phy_tree(CSS)
df.philr <- philr(df, tree, part.weights='anorm.x.gm.counts',
                  ilr.weights='blw.sqrt', return.all=FALSE, n_cores=1)
df.philr.long <- convert_to_long(df.philr, get_variable(CSS, 'BODY_SITE'))
plot_density_breakdown(df.philr.long, 'n3', tax_table(CSS))
}

